import {Component, ElementRef, OnInit, ViewChild} from '@angular/core';
import {Prodotto} from "./models/prodotto";
import {HttpClient} from "@angular/common/http";

@Component({
  selector: 'app-root',
  templateUrl: './app.component.html',
  styleUrls: ['./app.component.css']
})
export class AppComponent implements OnInit {

  prodotto_selezionato: string = "";
  prodotti_disponibili: Prodotto[] = [];
  carrello: Prodotto[] = [];
  totale: number = 0;
  prodotto_aggiunto?: Prodotto = undefined;
  paga_spesa: boolean = false;

  constructor(private httpClient: HttpClient) {
  }

  ngOnInit(): void {
    this.httpClient.get<Prodotto[]>('assets/data/data.json').subscribe((res) => {
      this.prodotti_disponibili = res;
    });

    console.log(this.prodotti_disponibili);
  }

  addCarrello(id_prodotto: string): void {
    let index_prodotto = this.prodotti_disponibili.map(function(p) { return p.id; }).indexOf(id_prodotto);

    if(index_prodotto >= 0) {
      this.prodotto_aggiunto = this.prodotti_disponibili[index_prodotto];
      this.carrello.push(this.prodotto_aggiunto);
      this.totale += this.prodotto_aggiunto.prezzo;
      this.prodotto_selezionato = "";
    }
  }

  remove(id_prodotto: string): void {
    let index_prodotto = this.carrello.map(function(p) { return p.id; }).indexOf(id_prodotto);

    if (index_prodotto >= 0) {
      let prodotto_rimosso = this.carrello[index_prodotto];
      this.carrello.splice(index_prodotto, 1);
      this.totale -= prodotto_rimosso.prezzo;
    }
  }

  onChangeProdotto(){
    this.addCarrello(this.prodotto_selezionato);
  }

  paga() {
    this.paga_spesa = true;
  }

  nuova_spesa() {
    this.carrello = [];
    this.totale = 0;
    this.prodotto_aggiunto = undefined;
    this.paga_spesa = false;
    this.prodotto_selezionato = "";
  }

  @ViewChild('input', { static: false })
  set input(element: ElementRef<HTMLInputElement>) {
    if(element) {
      element.nativeElement.focus()
    }
  }

}
